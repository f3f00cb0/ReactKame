{"version":3,"sources":["Instagram.js","Cats.js","App.js","serviceWorker.js","index.js"],"names":["instaPosts","id","url","RenderInstaPost","props","content","instaposts","map","post","className","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","catslist","name","isProtagonist","race","color","Cats","cat","to","AppCat","useParams","find","p","parseInt","console","log","NewsApiComponent","state","error","isLoaded","items","fetch","then","res","json","result","setState","catch","this","message","articles","item","href","title","aria-label","aria-hidden","React","Component","NewsFrApiComponent","AjaxComponent","slug","src","cover","titre","characters","atck","def","spike","Clock","date","Date","timerID","setInterval","tick","document","addEventListener","$navbarBurgers","Array","prototype","slice","call","querySelectorAll","length","forEach","el","target","dataset","$target","getElementById","classList","toggle","clearInterval","toLocaleTimeString","Nav","handleClick","bind","handleOutsideClick","navmenuCollapsed","removeEventListener","prevState","e","width","height","onClick","data-target","data-social-network","data-social-action","data-social-target","PrintComponent","Chara","clock","toLocaleDateString","bulma","character","alt","ShowArticle","App","class","cats","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","instagram","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10d57317.chunk.js","sourcesContent":["import React from 'react';\nimport InstagramEmbed from 'react-instagram-embed';\n\nexport function add(x, y) {\n    return x + y\n}\n\nexport function mutiply(x, y) {\n    return x * y\n}\n\nexport const instaPosts = [\n    { id: 0, url: 'https://instagr.am/p/Zw9o4/' },\n    { id: 1, url: 'https://instagr.am/p/Zw8o4/' },\n  ];\n\nexport function RenderInstaPost(props) {\n    const content = props.instaposts.map((post) =>\n      <div className=\"column is-one-quarter\">\n        <InstagramEmbed\n          url={post.url}\n          maxWidth={320}\n          hideCaption={false}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => { }}\n          onSuccess={() => { }}\n          onAfterRender={() => { }}\n          onFailure={() => { }}\n        />\n      </div>\n  \n    );\n    return (\n      <div className=\"mediaposts\">\n        <div className=\"columns is-multiline is-mobile\">\n          {content}\n        </div>\n      </div>\n    )\n  };","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n} from 'react-router-dom'\n\nexport const catslist = [\n    { id: 0, name: 'Pepper', isProtagonist: false, race: 'Chartreux', color: 'Gris' },\n    { id: 1, name: 'Aladdin', isProtagonist: false, race: 'Batard', color: 'Roux Tigré' },\n    { id: 2, name: 'Mr Mittens', isProtagonist: true, race: 'Batard', color: 'Noir' },\n    { id: 4, name: 'Felix', isProtagonist: false, race: 'Siamois', color: 'Beige et Marron' },\n];\n\nexport const catsTrait = [\n    { id: 1, trait: 'gentil', cat: 1 },\n    { id: 2, trait: 'maladroit', cat: 2 },\n    { id: 3, trait: 'logique', cat: 3 },\n    { id: 4, trait: 'revolutionnaire', cat: 4 },\n];\n\nfunction find(id) {\n    return catslist.find(p => p.id === id)\n}\n\nexport function Cats(props) {\n    const url = \"chat\";\n    const content = props.catslist.map((cat) =>\n      <tr>\n        <th>\n          <Link to={`${url}/${cat.id}`}>{cat.name}</Link>\n        </th>\n  \n        <th>\n          {cat.isProtagonist ? 'oui' : 'non'}\n        </th>\n        <th>\n          {cat.race}\n        </th>\n        <th>\n          {cat.color}\n        </th>\n      </tr>\n  \n    );\n    return (\n      <div className=\"column is-three-fifths is-offset-one-fifth\">\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>Nom</th>\n              <th>Protagoniste ?</th>\n              <th>Race</th>\n              <th>Couleur</th>\n            </tr>\n          </thead>\n          <tbody>\n            {content}\n          </tbody>\n        </table>\n      </div>\n    )\n  };\n\nexport function AppCat() {\n    let { id } = useParams();\n    let cat = find(parseInt(id));\n    if (cat.isProtagonist === true) {\n        cat.isProtagonist = \"Est le protagoniste\";\n    } else {\n        cat.isProtagonist = \"N'est pas le protagoniste\"\n    }\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {cat.name}\n                <br />\n                {cat.race}\n                <br />\n                {cat.isProtagonist}\n                <br />\n                {cat.color}\n            </header>\n        </div>\n    );\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom'\nimport * as instagram from './Instagram.js';\nimport * as cats from './Cats.js';\nimport './App.css';\n\n\nconsole.log(instagram.add(1, 2));\n\nclass NewsApiComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    let url = \"https://newsapi.org/v2/everything?q=fortnite&from=2019-11-12&sortBy=publishedAt&apiKey=3c7a7bde959b42aa954054ba2f493814&language=en\";\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      ).catch(console.log)\n    \n  }\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div className=\"column is-three-fifths is-offset-one-quarter catbox\">\n          <div className=\"cat\">\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__tail\"></div>\n            <div className=\"cat__head\"></div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"columns is-multiline is-mobile is-centered\">\n\n          {items.articles.map(item => (\n            <div className=\"column is-6\">\n              <div className=\"box\">\n                <article className=\"media\">\n                  <div className=\"media-content\">\n                    <div className=\"content\">\n                      <a href={item.url}>\n                        <strong className=\"mediaposts-title\">{item.title}</strong> <small></small>\n                      </a>\n                      <p>{item.content}</p>\n                    </div>\n                    <nav className=\"level is-mobile\">\n                      <div className=\"level-left\">\n                        <a className=\"level-item\" aria-label=\"reply\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-reply\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"retweet\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"like\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                      </div>\n                    </nav>\n                  </div>\n                </article>\n              </div>\n\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nclass NewsFrApiComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    let url = \"https://newsapi.org/v2/everything?q=fortnite&from=2019-11-12&sortBy=publishedAt&apiKey=3c7a7bde959b42aa954054ba2f493814&language=fr\";\n    fetch(url)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      ).catch(console.log)\n    \n  }\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div className=\"column is-three-fifths is-offset-one-quarter catbox\">\n          <div className=\"cat\">\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__tail\"></div>\n            <div className=\"cat__head\"></div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"columns is-multiline is-mobile is-centered\">\n\n          {items.articles.map(item => (\n            <div className=\"column is-6\">\n              <div className=\"box\">\n                <article className=\"media\">\n                  <div className=\"media-content\">\n                    <div className=\"content\">\n                      <a href={item.url}>\n                        <strong className=\"mediaposts-title\">{item.title}</strong> <small></small>\n                      </a>\n                      <p>{item.content}</p>\n                    </div>\n                    <nav className=\"level is-mobile\">\n                      <div className=\"level-left\">\n                        <a className=\"level-item\" aria-label=\"reply\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-reply\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"retweet\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"like\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                      </div>\n                    </nav>\n                  </div>\n                </article>\n              </div>\n\n            </div>\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nclass AjaxComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://kame.tv/articleJson\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n          console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      ).catch(console.log)\n  }\n\n  render() {\n    const { error, isLoaded, items } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return (\n        <div className=\"column is-three-fifths is-offset-one-quarter catbox\">\n          <div className=\"cat\">\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__body\"></div>\n            <div className=\"cat__tail\"></div>\n            <div className=\"cat__head\"></div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"columns is-multiline is-mobile is-centered\">\n\n          {items.map(item => (\n            <div className=\"column is-6\">\n              <div className=\"box\">\n                <article className=\"media\">\n                  <div className=\"media-content\">\n                    <div className=\"content\">\n                      <Link to={`article/${item.slug}`}>\n                        <img src={item.cover} className=\"mediapostimg\" />\n                        <strong className=\"mediaposts-title\">{item.titre}</strong> <small></small>\n                      </Link>\n                    </div>\n                    <nav className=\"level is-mobile\">\n                      <div className=\"level-left\">\n                        <a className=\"level-item\" aria-label=\"reply\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-reply\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"retweet\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                        <a className=\"level-item\" aria-label=\"like\">\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n                          </span>\n                        </a>\n                      </div>\n                    </nav>\n                  </div>\n                </article>\n              </div>\n\n            </div>\n          ))}\n\n        </div>\n      );\n    }\n  }\n}\n\n\n\nconst characters = [\n  { id: 1, name: 'Hello', atck: '1', def: '1', spike: '1' },\n  { id: 2, name: 'Helloggzgz', atck: '1', def: '1', spike: '1' },\n];\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n    document.addEventListener('DOMContentLoaded', () => {\n\n      // Get all \"navbar-burger\" elements\n      const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);\n\n      // Check if there are any navbar burgers\n      if ($navbarBurgers.length > 0) {\n\n        // Add a click event on each of them\n        $navbarBurgers.forEach(el => {\n          el.addEventListener('click', () => {\n\n            // Get the target from the \"data-target\" attribute\n            const target = el.dataset.target;\n            const $target = document.getElementById(target);\n\n            // Toggle the \"is-active\" class on both the \"navbar-burger\" and the \"navbar-menu\"\n            el.classList.toggle('is-active');\n            $target.classList.toggle('is-active');\n\n          });\n        });\n      }\n\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Bonjour, monde !</h1>\n        <h2>Il est {this.state.date.toLocaleTimeString()}.</h2>\n      </div>\n    );\n  }\n}\n\n\nclass Nav extends React.Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.state = {\n      navmenuCollapsed: false\n    };\n  }\n\n  handleClick() {\n    if (!this.state.navmenuCollapsed) {\n\n      document.addEventListener('click', this.handleOutsideClick, false);\n\n    } else {\n\n      var nav = document.getElementById('nav');\n      nav.className = \"navbar-burger burger\";\n      var navbarExampleTransparentExample = document.getElementById('navbarExampleTransparentExample');\n      navbarExampleTransparentExample.className = \"navbar-menu\";\n\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      navmenuCollapsed: !prevState.navmenuCollapsed,\n    }));\n  }\n\n  handleOutsideClick(e) {\n    this.handleClick();\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar is-black\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"http://kame.tv/kame-logo-ecrit-blanc.svg\" width=\"112\" height=\"28\" />\n          </a>\n          <div id=\"nav\" className=\"navbar-burger burger\" onClick={this.handleClick} data-target=\"navbarExampleTransparentExample\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n\n        <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n\n          <div className=\"navbar-start\">\n            <a className=\"navbar-item\" href=\"/\">\n              Home\n            </a>\n            <div className=\"navbar-item has-dropdown is-hoverable\">\n              <a className=\"navbar-link\" href=\"https://bulma.io/documentation/overview/start/\">\n                Liens\n              </a>\n              <div className=\"navbar-dropdown is-boxed\">\n                <Link to=\"/insta\" className=\"navbar-item\">Insta</Link>\n                <Link to=\"/news\" className=\"navbar-item\">News Anglaises</Link>\n                <Link to=\"/newsfr\" className=\"navbar-item\">News Françaises</Link>\n              </div>\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"field is-grouped\">\n                <p className=\"control\">\n                  <a className=\"bd-tw-button button\" data-social-network=\"Twitter\" data-social-action=\"tweet\" data-social-target=\"https://bulma.io\" target=\"_blank\" href=\"https://twitter.com/intent/tweet?text=Bulma: a modern CSS framework based on Flexbox&amp;hashtags=bulmaio&amp;url=https://bulma.io&amp;via=jgthms\">\n                    <span className=\"icon\">\n                      <i className=\"fab fa-twitter\"></i>\n                    </span>\n                    <span>\n                      Tweet\n                    </span>\n                  </a>\n                </p>\n                <p className=\"control\">\n                  <a className=\"button is-primary\" href=\"https://github.com/jgthms/bulma/releases/download/0.8.0/bulma-0.8.0.zip\">\n                    <span className=\"icon\">\n                      <i className=\"fas fa-download\"></i>\n                    </span>\n                    <span>Download</span>\n                  </a>\n                </p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default function TestFunction() {\n\n  return (\n    <Router>\n      <Nav />\n      {/*\n        A <Switch> looks through all its children <Route>\n        elements and renders the first one whose path\n        matches the current URL. Use a <Switch> any time\n        you have multiple routes, but you want only one\n        of them to render at a time\n       OK COOL MAIS UTILISER ROUTE LARAVEL OU SYMFONY\n      */}\n      <Switch>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"/chat/:id\">\n          <cats.AppCat />\n        </Route>\n        <Route path=\"/insta\">\n          <instagram.RenderInstaPost instaposts={instagram.instaPosts} />\n        </Route>\n        <Route path=\"/cardboard\">\n\n        </Route>\n        <Route path=\"/ajax\">\n          <AjaxComponent />\n        </Route>\n        <Route path=\"/article/:slug\">\n          <ShowArticle />\n        </Route>\n        <Route path=\"/news\">\n          <NewsApiComponent />\n        </Route>\n        <Route path=\"/newsfr\">\n          <NewsFrApiComponent />\n        </Route>\n        <Route path=\"/print\">\n          <PrintComponent />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nclass PrintComponent extends React.Component {\n\n  render() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column is-6\">\n          Ah\n        </div>\n        <div className=\"column is-6\">\n          Oh\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction Chara(props) {\n  const clock = (\n    <Clock />\n  );\n\n  const date = new Date('2018-05-18T04:00:00Z').toLocaleDateString();\n\n  const bulma = props.characters.map((character) =>\n    <div className=\"column is-three-fifths is-offset-one-fifth\">\n      <div className=\"box\">\n        <article className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-64x64\">\n              <img src=\"https://bulma.io/images/placeholders/128x128.png\" alt=\"Image\" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <p>\n                <strong>{character.name}</strong> <small>{date}</small>\n                <br /> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean efficitur sit amet massa fringilla egestas. Nullam condimentum luctus turpis.\n              </p>\n            </div>\n            <nav className=\"level is-mobile\">\n              <div className=\"level-left\">\n                <a className=\"level-item\" aria-label=\"reply\">\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-reply\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n                <a className=\"level-item\" aria-label=\"retweet\">\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-retweet\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n                <a className=\"level-item\" aria-label=\"like\">\n                  <span className=\"icon is-small\">\n                    <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\n                  </span>\n                </a>\n              </div>\n            </nav>\n          </div>\n        </article>\n      </div>\n    </div>\n  );\n  return (\n    <div className=\"mediaposts\">\n      {clock}\n      {bulma}\n    </div>\n  );\n}\n\n\nfunction ShowArticle() {\n  return (\n    <div>\n      halo\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"carousel\">\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/aaffaa/00aa00/&amp;text=First\" />\n          <p>First</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Product+2\" />\n          <p>Product 2</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200&amp;text=Product+3\" />\n          <p>Product 3</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Product+4\" />\n          <p>Product 4</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200&amp;text=Product+5\" />\n          <p>Product 5</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Product+6\" />\n          <p>Product 6</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200&amp;text=Product+7\" />\n          <p>Product 7</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Product+8\" />\n          <p>Product 8</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200&amp;text=Product+9\" />\n          <p>Product 9</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Product+10\" />\n          <p>Product 10</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200&amp;text=Product+11\" />\n          <p>Product 11</p>\n        </div>\n        <div className=\"slide\"><img src=\"http://placehold.it/200x200/ffaaff/ff00ff/&amp;text=Last\" />\n          <p>Last</p>\n        </div>\n      </div>\n      <Chara characters={characters} />\n      <div class=\"mediaposts\">\n        <h1 className=\"mediaposts-title-news\">News</h1>\n        <div className=\"columns\">\n          <div className=\"column is-9\">\n            <AjaxComponent />\n          </div>\n          <div className=\"column is-3\">\n            Ahah\n          </div>\n        </div>\n\n      </div>\n\n\n      <cats.Cats catslist={cats.catslist} />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}