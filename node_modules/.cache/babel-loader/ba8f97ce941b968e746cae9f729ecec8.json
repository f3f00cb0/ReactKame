{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mathieu\\\\reactapp\\\\testapp\\\\src\\\\Cats.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from 'react-router-dom';\nexport const catslist = [{\n  id: 0,\n  name: 'Pepper',\n  isProtagonist: false,\n  race: 'Chartreux',\n  color: 'Gris'\n}, {\n  id: 1,\n  name: 'Aladdin',\n  isProtagonist: false,\n  race: 'Batard',\n  color: 'Roux Tigré'\n}, {\n  id: 2,\n  name: 'Mr Mittens',\n  isProtagonist: true,\n  race: 'Batard',\n  color: 'Noir'\n}, {\n  id: 4,\n  name: 'Felix',\n  isProtagonist: false,\n  race: 'Siamois',\n  color: 'Beige et Marron'\n}];\nexport const catsTrait = [{\n  id: 1,\n  trait: 'gentil',\n  cat: 1\n}, {\n  id: 2,\n  trait: 'maladroit',\n  cat: 2\n}, {\n  id: 3,\n  trait: 'logique',\n  cat: 3\n}, {\n  id: 4,\n  trait: 'revolutionnaire',\n  cat: 4\n}];\n\nfunction find(id) {\n  return catslist.find(p => p.id === id);\n}\n\nexport function Cats(props) {\n  const url = \"chat\";\n  const content = props.catslist.map(cat => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"\".concat(url, \"/\").concat(cat.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, cat.name)), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, cat.isProtagonist ? 'oui' : 'non'), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, cat.race), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, cat.color)));\n  return React.createElement(\"div\", {\n    className: \"column is-three-fifths is-offset-one-fifth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table is-fullwidth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Protagoniste ?\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Race\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Couleur\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, content)));\n}\n;\nexport function AppCat() {\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  let cat = find(parseInt(id));\n\n  if (cat.isProtagonist === true) {\n    cat.isProtagonist = \"Est le protagoniste\";\n  } else {\n    cat.isProtagonist = \"N'est pas le protagoniste\";\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, cat.name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), cat.race, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), cat.isProtagonist, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), cat.color));\n}","map":{"version":3,"sources":["C:\\Users\\Mathieu\\reactapp\\testapp\\src\\Cats.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","useParams","catslist","id","name","isProtagonist","race","color","catsTrait","trait","cat","find","p","Cats","props","url","content","map","AppCat","parseInt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n} from 'react-router-dom'\n\nexport const catslist = [\n    { id: 0, name: 'Pepper', isProtagonist: false, race: 'Chartreux', color: 'Gris' },\n    { id: 1, name: 'Aladdin', isProtagonist: false, race: 'Batard', color: 'Roux Tigré' },\n    { id: 2, name: 'Mr Mittens', isProtagonist: true, race: 'Batard', color: 'Noir' },\n    { id: 4, name: 'Felix', isProtagonist: false, race: 'Siamois', color: 'Beige et Marron' },\n];\n\nexport const catsTrait = [\n    { id: 1, trait: 'gentil', cat: 1 },\n    { id: 2, trait: 'maladroit', cat: 2 },\n    { id: 3, trait: 'logique', cat: 3 },\n    { id: 4, trait: 'revolutionnaire', cat: 4 },\n];\n\nfunction find(id) {\n    return catslist.find(p => p.id === id)\n}\n\nexport function Cats(props) {\n    const url = \"chat\";\n    const content = props.catslist.map((cat) =>\n      <tr>\n        <th>\n          <Link to={`${url}/${cat.id}`}>{cat.name}</Link>\n        </th>\n  \n        <th>\n          {cat.isProtagonist ? 'oui' : 'non'}\n        </th>\n        <th>\n          {cat.race}\n        </th>\n        <th>\n          {cat.color}\n        </th>\n      </tr>\n  \n    );\n    return (\n      <div className=\"column is-three-fifths is-offset-one-fifth\">\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>Nom</th>\n              <th>Protagoniste ?</th>\n              <th>Race</th>\n              <th>Couleur</th>\n            </tr>\n          </thead>\n          <tbody>\n            {content}\n          </tbody>\n        </table>\n      </div>\n    )\n  };\n\nexport function AppCat() {\n    let { id } = useParams();\n    let cat = find(parseInt(id));\n    if (cat.isProtagonist === true) {\n        cat.isProtagonist = \"Est le protagoniste\";\n    } else {\n        cat.isProtagonist = \"N'est pas le protagoniste\"\n    }\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {cat.name}\n                <br />\n                {cat.race}\n                <br />\n                {cat.isProtagonist}\n                <br />\n                {cat.color}\n            </header>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}